openapi: 3.0.2
info:
  title: Snippets API
  version: v1
  description: Snippets API Documents
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # optional, for documentation purposes only
paths:
  /api/snippets/:
    get:
      tags:
        - Get Snippets
      security:
        - bearerAuth: []
      operationId: listSnippets
      summary: List all Snippets
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                items: {"status": "success"}
          description: 'Get Snippets success'
    post:
      tags:
        - Manage Snippet
      security:
        - bearerAuth: []        
      operationId: CreateSnippetList
      summary: Creates a Snippet
      parameters: []
      requestBody:
        description: "please enter first_name, last_name, status_text, remark_text"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                date_of_birth:
                  type: string
                status_text:
                  type: string
                remark_text:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: 'Success'
  /api/snippets/{id}/:
    get:
      tags:
        - Get Snippets
      security:
        - bearerAuth: []        
      operationId: RetrieveSnippetDetail
      summary: List Snippet by id
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: 'Get Snippet success'
    put:
      tags:
        - Manage Snippet
      security:
        - bearerAuth: []
      operationId: UpdateSnippetDetail
      summary: Update Snippet by id
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        description: "please enter status_text, remark_text"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_text:
                  type: string
                remark_text:
                  type: string                  
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: 'Update success'
    patch:
      tags:
        - Manage Snippet
      security:
        - bearerAuth: []        
      operationId: PartialUpdateSnippetDetail
      summary: Partial update Snippet by id
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        description: "please enter status_text, remark_text can be partial update field(s)"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                date_of_birth:
                  type: string
                status_text:
                  type: string
                remark_text:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: 'Update sucess'
    delete:
      tags:
        - Manage Snippet  
      security:
        - bearerAuth: []        
      operationId: DestroySnippetDetail
      summary: Delete Snippet by id
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: 'Delete success'
  /api/avatar/{id}/:
    patch:
      tags:
        - Avatar update
      security:
        - bearerAuth: []        
      operationId: uploadFile
      summary: Avatar update by id
      consumes:
        - multipart/form-data
      parameters:
        - name: id
          in: path
          required: true
          description: ''
          schema:
            type: string     
      requestBody:        
        required: true
        content: 
          multipart/form-data:
            schema:         
              type: object
              properties:                
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Update avatar success
  /api/token/:
    post:
      tags:
        - Authentication
      description: Create a new token from username and password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: Create a new token for gaining authenticated access to resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string          
  /api/token/refresh/:
    post:
      tags:
        - Authentication
      description: Get a new token (from refresh token) for gaining authenticated access to resources
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                refresh:
                  type: string
                  example: access_token
      responses:
        '201':
          description: Create a new token (from refresh token) for gaining authenticated access to resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string    